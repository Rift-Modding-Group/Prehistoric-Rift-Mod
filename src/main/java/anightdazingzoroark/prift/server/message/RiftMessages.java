package anightdazingzoroark.prift.server.message;

import anightdazingzoroark.prift.RiftInitialize;
import net.minecraftforge.fml.common.network.NetworkRegistry;
import net.minecraftforge.fml.common.network.simpleimpl.SimpleNetworkWrapper;
import net.minecraftforge.fml.relauncher.Side;

public class RiftMessages {
    public static SimpleNetworkWrapper WRAPPER;

    public static void registerMessages() {
        WRAPPER = NetworkRegistry.INSTANCE.newSimpleChannel(RiftInitialize.MODID);

        int id = 0;
        WRAPPER.registerMessage(RiftApatosaurusManagePassengers.Handler.class, RiftApatosaurusManagePassengers.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftChangeCreatureFromMenu.Handler.class, RiftChangeCreatureFromMenu.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftChangeInventoryFromMenu.Handler.class, RiftChangeInventoryFromMenu.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftChangeInventoryFromMenu.Handler.class, RiftChangeInventoryFromMenu.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftChangeWeaponInvFromMenu.Handler.class, RiftChangeWeaponInvFromMenu.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftChangeWeaponInvFromMenu.Handler.class, RiftChangeWeaponInvFromMenu.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftForceChangePos.Handler.class, RiftForceChangePos.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetEntityGrabbed.Handler.class, RiftSetEntityGrabbed.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetEntityGrabbed.Handler.class, RiftSetEntityGrabbed.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftGrabbedEntitySetPos.Handler.class, RiftGrabbedEntitySetPos.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftHoverChangeControl.Handler.class, RiftHoverChangeControl.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftIncrementControlUse.Handler.class, RiftIncrementControlUse.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftLaunchLWeaponProjectile.Handler.class, RiftLaunchLWeaponProjectile.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftCanUseMoveTriggerButton.Handler.class, RiftCanUseMoveTriggerButton.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftDeployPartyMem.Handler.class, RiftDeployPartyMem.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftDeployPartyMem.Handler.class, RiftDeployPartyMem.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftManageUtilizingControl.Handler.class, RiftManageUtilizingControl.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftMultipartInteract.Handler.class, RiftMultipartInteract.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftOpenInventoryFromMenu.Handler.class, RiftOpenInventoryFromMenu.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftOpenWeaponInventory.Handler.class, RiftOpenWeaponInventory.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftOpenPopupFromRadial.Handler.class, RiftOpenPopupFromRadial.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetGrabTarget.Handler.class, RiftSetGrabTarget.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetCanWanderHarvest.Handler.class, RiftSetCanWanderHarvest.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSpawnChestDetectParticle.Handler.class, RiftSpawnChestDetectParticle.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftSpawnDetectParticle.Handler.class, RiftSpawnDetectParticle.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftStartRiding.Handler.class, RiftStartRiding.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetWorkstation.Handler.class, RiftSetWorkstation.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftTeleportPartyMemToPlayer.Handler.class, RiftTeleportPartyMemToPlayer.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftRemoveAfterSendToBox.Handler.class, RiftRemoveAfterSendToBox.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftRemoveAfterSendToBox.Handler.class, RiftRemoveAfterSendToBox.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftUpdatePlayerTamedCreatures.Handler.class, RiftUpdatePlayerTamedCreatures.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftDropPartyMemberInventory.Handler.class, RiftDropPartyMemberInventory.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetTurretMode.Handler.class, RiftSetTurretMode.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftChangeTurretTargetingFromMenu.Handler.class, RiftChangeTurretTargetingFromMenu.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftUpdatePlayerJournalProgress.Handler.class, RiftUpdatePlayerJournalProgress.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftUpdateNonPotionEffects.Handler.class, RiftUpdateNonPotionEffects.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftSetBleeding.Handler.class, RiftSetBleeding.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetBleeding.Handler.class, RiftSetBleeding.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftManageBleeding.Handler.class, RiftManageBleeding.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetBolaCaptured.Handler.class, RiftSetBolaCaptured.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetBolaCaptured.Handler.class, RiftSetBolaCaptured.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftManageBolaCaptured.Handler.class, RiftManageBolaCaptured.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetRiding.Handler.class, RiftSetRiding.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetRiding.Handler.class, RiftSetRiding.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftUpgradePlayerParty.Handler.class, RiftUpgradePlayerParty.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftUpgradePlayerParty.Handler.class, RiftUpgradePlayerParty.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftUpgradePlayerBox.Handler.class, RiftUpgradePlayerBox.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftUpgradePlayerBox.Handler.class, RiftUpgradePlayerBox.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftOpenCreatureBoxMenu.Handler.class, RiftOpenCreatureBoxMenu.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftModifyPlayerCreature.Handler.class, RiftModifyPlayerCreature.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftModifyPlayerCreature.Handler.class, RiftModifyPlayerCreature.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftCreatureBoxSetLastOpenedTime.Handler.class, RiftCreatureBoxSetLastOpenedTime.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftCreatureBoxSetLastOpenedTime.Handler.class, RiftCreatureBoxSetLastOpenedTime.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftRemoveCreature.Handler.class, RiftRemoveCreature.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftRemoveCreature.Handler.class, RiftRemoveCreature.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftPartySetLastOpenedTime.Handler.class, RiftPartySetLastOpenedTime.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftPartySetLastOpenedTime.Handler.class, RiftPartySetLastOpenedTime.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftForceSyncPartyNBT.Handler.class, RiftForceSyncPartyNBT.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncPartyNBT.Handler.class, RiftForceSyncPartyNBT.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftForceSyncBoxNBT.Handler.class, RiftForceSyncBoxNBT.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncBoxNBT.Handler.class, RiftForceSyncBoxNBT.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftForceSyncPartySizeLevel.Handler.class, RiftForceSyncPartySizeLevel.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncPartySizeLevel.Handler.class, RiftForceSyncPartySizeLevel.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftForceSyncBoxSizeLevel.Handler.class, RiftForceSyncBoxSizeLevel.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncBoxSizeLevel.Handler.class, RiftForceSyncBoxSizeLevel.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftForceSyncLastSelected.Handler.class, RiftForceSyncLastSelected.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncLastSelected.Handler.class, RiftForceSyncLastSelected.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftForceSyncPartyLastOpenedTime.Handler.class, RiftForceSyncPartyLastOpenedTime.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncPartyLastOpenedTime.Handler.class, RiftForceSyncPartyLastOpenedTime.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftForceSyncBoxLastOpenedTime.Handler.class, RiftForceSyncBoxLastOpenedTime.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncBoxLastOpenedTime.Handler.class, RiftForceSyncBoxLastOpenedTime.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftManualUseMove.Handler.class, RiftManualUseMove.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftManualUseLargeWeapon.Handler.class, RiftManualUseLargeWeapon.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetSprinting.Handler.class, RiftSetSprinting.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetSprinting.Handler.class, RiftSetSprinting.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftShowParticlesOnClient.Handler.class, RiftShowParticlesOnClient.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftChangeDeploymentType.Handler.class, RiftChangeDeploymentType.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftChangeDeploymentType.Handler.class, RiftChangeDeploymentType.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftManageBlockBreakControl.Handler.class, RiftManageBlockBreakControl.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSetEntityMotion.Handler.class, RiftSetEntityMotion.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftUpdatePartyDeployed.Handler.class, RiftUpdatePartyDeployed.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftUpdatePartyDeployed.Handler.class, RiftUpdatePartyDeployed.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftAddToParty.Handler.class, RiftAddToParty.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSyncJournal.Handler.class, RiftSyncJournal.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSyncJournal.Handler.class, RiftSyncJournal.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftJournalEditOne.Handler.class, RiftJournalEditOne.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftJournalEditAll.Handler.class, RiftJournalEditAll.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftUpdatePartyAfterOpenPartyScreen.Handler.class, RiftUpdatePartyAfterOpenPartyScreen.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncSelectedPartyPosFromOverlay.Handler.class, RiftForceSyncSelectedPartyPosFromOverlay.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncSelectedPartyPosFromOverlay.Handler.class, RiftForceSyncSelectedPartyPosFromOverlay.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftSetSelectedPartyPosFromOverlay.Handler.class, RiftSetSelectedPartyPosFromOverlay.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftUpdateIndividualPartyCreatureClient.Handler.class, RiftUpdateIndividualPartyCreatureClient.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftUpdateIndividualPartyCreatureClient.Handler.class, RiftUpdateIndividualPartyCreatureClient.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftUpdateIndividualPartyCreatureServer.Handler.class, RiftUpdateIndividualPartyCreatureServer.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncLastOpenedBox.Handler.class, RiftForceSyncLastOpenedBox.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncLastOpenedBox.Handler.class, RiftForceSyncLastOpenedBox.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftSetLastOpenedBox.Handler.class, RiftSetLastOpenedBox.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftAddToBox.Handler.class, RiftAddToBox.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSwapCreatureMoves.Handler.class, RiftSwapCreatureMoves.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftChangeCreatureBoxName.Handler.class, RiftChangeCreatureBoxName.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftChangeSelectedCreatureName.Handler.class, RiftChangeSelectedCreatureName.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftReleaseSelectedCreature.Handler.class, RiftReleaseSelectedCreature.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftSwapCreaturePositions.Handler.class, RiftSwapCreaturePositions.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceUpdateCreatureBoxDeployed.Handler.class, RiftForceUpdateCreatureBoxDeployed.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceUpdateCreatureBoxDeployed.Handler.class, RiftForceUpdateCreatureBoxDeployed.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftUpdateIndividualBoxDeployedCreatureClient.Handler.class, RiftUpdateIndividualBoxDeployedCreatureClient.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftUpdateIndividualBoxDeployedCreatureClient.Handler.class, RiftUpdateIndividualBoxDeployedCreatureClient.class, id++, Side.CLIENT);
        WRAPPER.registerMessage(RiftUpdateIndividualBoxDeployedCreatureServer.Handler.class, RiftUpdateIndividualBoxDeployedCreatureServer.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftDropSelectedInventory.Handler.class, RiftDropSelectedInventory.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftUpdateAllCreatureBoxDeployedMems.Handler.class, RiftUpdateAllCreatureBoxDeployedMems.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncBoxDeployedNBT.Handler.class, RiftForceSyncBoxDeployedNBT.class, id++, Side.SERVER);
        WRAPPER.registerMessage(RiftForceSyncBoxDeployedNBT.Handler.class, RiftForceSyncBoxDeployedNBT.class, id++, Side.CLIENT);
    }
}